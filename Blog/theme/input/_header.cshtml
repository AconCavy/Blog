@{
    var description = Document.WithoutSettings().GetString("Lead") ?? Document.WithoutSettings().GetString(WebKeys.Description);
    var title = Document.GetString("Title") ?? Document.GetString("SiteTitle");
    var isPost = Document.GetBool("IsPost") && title != "Tags" && title != "Archive";
}
<header>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="@(isPost ? "post-heading" : "site-heading")">
                    <h1>
                        @title
                        @if (Document.GetInt(Keys.Index) > 1)
                        {
                            <small>(Page @Document.GetString(Keys.Index))</small>
                        }
                    </h1>
                    @if (!string.IsNullOrEmpty(description))
                    {
                        <h2 class="subheading">@description</h2>
                    }
                    @if (isPost)
                    {
                        <div class="meta">Published on @Document.GetDateTime(WebKeys.Published).ToLongDateString()</div>
                        <div class="meta">Updated on @Document.GetDateTime(WebKeys.Updated).ToLongDateString()</div>
                        @if (Document.ContainsKey("Tags"))
                        {
                            <div class="mt-3">
                                @foreach (var tag in Document.GetList<string>("Tags")
                                    .Select(x => Outputs["tags.html"].First().GetChildren().FirstOrDefault(y => y.GetTitle().Equals(x, StringComparison.OrdinalIgnoreCase)))
                                    .Where(x => x != null))
                                {
                                    <a href="@Context.GetLink(tag)" class="badge badge-dark"> @tag.GetTitle()</a>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</header>